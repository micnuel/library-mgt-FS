{"version":3,"sources":["components/columns/columns.tsx","redux/actions/book.ts","types.ts","components/dropdown/dropdown.tsx","components/header/header.tsx","hooks/books/useBooks.ts","pages/Home.tsx","redux/actions/author.ts","pages/Author.tsx","pages/Book.tsx","pages/Login.tsx","redux/actions/user.ts","pages/Register.tsx","components/book/book.tsx","pages/SingleBook.tsx","redux/actions/borrow.ts","hooks/borrows/useBorrows.ts","pages/Borrow.tsx","pages/Admin.tsx","pages/ManageBook.tsx","hooks/authors/useauthors.ts","pages/ManageAuthor.tsx","pages/UpdateBook.tsx","pages/UpdateAuthor.tsx","components/checkout/checkout.tsx","Routes.tsx","App.tsx","serviceWorker.ts","redux/reducers/author.ts","redux/reducers/book.ts","redux/reducers/user.ts","redux/reducers/borrow.ts","redux/reducers/index.ts","redux/sagas/index.ts","redux/store.ts","index.tsx"],"names":["columns","name","selector","sortable","cell","row","className","author","firstName","addBook","book","type","payload","updateBook","deleteBook","bookId","dispatch","fetch","method","headers","then","resp","alert","status","DropDown","history","useHistory","user","JSON","parse","localStorage","getItem","Dropdown","text","icon","floating","labeled","button","Menu","Item","onClick","push","removeItem","Header","borrowed","useSelector","state","inTray","console","log","secondary","to","position","Input","placeholder","Button","e","Icon","length","useBooks","useState","books","useDispatch","useEffect","json","setBooks","Home","tableHeader","disabled","find","p","_id","size","title","data","striped","noDataComponent","fetchAuthors","authors","setAuthors","AddAuthor","token","setTimeout","initialValues","lastName","validationSchema","yup","min","max","required","onSubmit","values","setSubmitting","resetForm","stringify","authorization","body","addAuthor","props","Form","handleSubmit","Group","onChange","handleChange","onBlur","handleBlur","value","errors","id","AddBook","options","key","isbn","category","publisher","description","publishedYear","createBook","Field","control","multiple","label","map","cat","Login","email","password","login","userLogin","widths","Register","username","passwordConfirmation","role","oneOf","addUser","extra","Book","useParams","Card","style","width","marginLeft","image","header","meta","SingleBook","useBorrows","borrow","borrowsList","borrows","Borrows","uBorrow","Admin","operation","handleClick","index","ManageBooks","useAuthors","ManageAuthors","UpdateBook","update","UpdateAuthor","authorId","Checkout","textAlign","List","divided","Content","floated","borrowerId","createBorrow","Routes","exact","path","component","App","Boolean","window","location","hostname","match","action","findIndex","splice","users","undefined","setItem","createRootReducer","combineReducers","saveState","rootSaga","select","all","takeLatest","initState","store","initialState","sagaMiddleware","createSagaMiddleware","middlewares","thunk","composeEnhancers","compose","localStorageState","createStore","applyMiddleware","run","makeStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1d3bf977.chunk.js","sourcesContent":["import React from 'react'\n\nimport './columns.css'\n\nexport const columns = [\n  {\n    name: 'Name',\n    selector: 'name',\n    sortable: true,\n  } /* {\n    name: 'Category',\n    cell: (row: any) => (\n      <div>\n        <li>{row.category[0] ? row.category[0].name : row.category[1]}</li>\n        <li>{row.category[1] ? row.category[1].name : row.category[2]}</li>\n        <li>{row.category[2] ? row.category[2].name : row.category[3]}</li>\n      </div>\n    ),\n  } */,\n  {\n    name: 'Authors',\n    cell: (row: any) => (\n      <div className=\"columns\">\n        <li>{row.author[0] ? row.author[0].firstName : row.author[1]}</li>\n        <li>{row.author[1] ? row.author[1].firstName : row.author[2]}</li>\n        <li>{row.author[2] ? row.author[2].firstName : row.author[3]}</li>\n      </div>\n    ),\n  },\n\n  {\n    name: 'Publisher',\n    selector: 'publisher',\n    sortable: true,\n  },\n]\n","import { Dispatch } from 'redux'\n\nimport {\n  ADD_BOOK,\n  REMOVE_BOOK,\n  Book,\n  BookActions,\n  FETCH_BOOKS,\n  UPDATE_BOOK,\n  User,\n} from '../../types'\n\nexport function addBook(book: Book): BookActions {\n  return {\n    type: ADD_BOOK,\n    payload: {\n      book,\n    },\n  }\n}\nexport function updateBook(book: Book): BookActions {\n  return {\n    type: UPDATE_BOOK,\n    payload: {\n      book,\n    },\n  }\n}\nexport function removeBook(book: Book): BookActions {\n  return {\n    type: REMOVE_BOOK,\n    payload: {\n      book,\n    },\n  }\n}\nexport function setBooks(books: Book[]): BookActions {\n  return {\n    type: FETCH_BOOKS,\n    payload: {\n      books,\n    },\n  }\n}\n// Async action processed by redux-thunk middleware\nexport function createBook(book: Book) {\n  return (dispatch: Dispatch) => {\n    return fetch(`https://salty-atoll-28842.herokuapp.com/api/v1/books`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(book),\n    }).then((resp) => resp.json())\n  }\n}\n\nexport function deleteBook(bookId?: string) {\n  return (dispatch: Dispatch) => {\n    return fetch(\n      `https://salty-atoll-28842.herokuapp.com/api/v1/books/${bookId}`,\n      {\n        method: 'DELETE',\n        headers: {\n          'Content-type': 'application/json',\n        },\n      }\n    ).then((resp) => alert(resp.status))\n  }\n}\nexport function borrowBookss() {\n  return (dispatch: Dispatch) => {\n    return fetch(`https://salty-atoll-28842.herokuapp.com/api/v1/books`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify({}),\n    })\n      .then((resp) => resp.json())\n      .then((book) => {\n        dispatch(addBook(book)) // should this be books\n      })\n  }\n}\n\nexport function fetchBooks() {\n  return (dispatch: Dispatch) => {\n    return fetch(`https://salty-atoll-28842.herokuapp.com/api/v1/books`)\n      .then((resp) => resp.json())\n      .then((books) => {\n        dispatch(setBooks(books))\n      })\n  }\n}\n\nexport function fetchUpdate(update: Partial<Book>, bookId?: string) {\n  return (dispatch: Dispatch) => {\n    return fetch(\n      `https://salty-atoll-28842.herokuapp.com/api/v1/books/${bookId}`,\n      {\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(update),\n      }\n    )\n      .then((resp) => resp.json())\n      .then((books) => {\n        dispatch(updateBook(books))\n      })\n  }\n}\n","// Action types\nexport const ADD_PRODUCT = 'ADD_PRODUCT'\nexport const REMOVE_PRODUCT = 'REMOVE_PRODUCT'\nexport const TOGGLE_DIALOG = 'TOGGLE_DIALOG'\n\n//Author\nexport const ADD_AUTHOR = 'ADD_AUTHOR'\nexport const REMOVE_AUTHOR = 'REMOVE_AUTHOR'\nexport const UPDATE_AUTHOR = 'UPDATE_AUTHOR'\nexport const FETCH_AUTHORS = 'FETCH_AUTHORS'\nexport type Author = {\n  _id?: string\n  firstName: string\n  lastName: string\n  books?: Book[]\n  token: any\n}\nexport type AuthorState = {\n  inTray: Author[]\n  authors: Author[]\n  update: Author[]\n}\n\nexport type AddAuthorAction = {\n  type: typeof ADD_AUTHOR\n  payload: {\n    author: Author\n  }\n}\nexport type SetAuthorAction = {\n  type: typeof FETCH_AUTHORS\n  payload: {\n    authors: Author[]\n  }\n}\n\nexport type RemoveAuthorAction = {\n  type: typeof REMOVE_AUTHOR\n  payload: {\n    author: Author\n  }\n}\n\nexport type UpdateAuthorAction = {\n  type: typeof UPDATE_AUTHOR\n  payload: {\n    author: Author\n  }\n}\nexport type AuthorActions =\n  | AddAuthorAction\n  | RemoveAuthorAction\n  | UpdateAuthorAction\n  | SetAuthorAction\n\n//Books\nexport const ADD_BOOK = 'ADD_BOOK'\nexport const REMOVE_BOOK = 'REMOVE_BOOK'\nexport const UPDATE_BOOK = 'UPDATE_BOOK'\nexport const FETCH_BOOKS = 'FETCH_BOOKS'\nexport type Book = {\n  _id?: string\n  name: string\n  isbn: string\n  category: string[]\n  publisher: string\n  description: string\n  status: string\n  authors?: Author[]\n  publishedYear?: number\n}\nexport type SetBookAction = {\n  type: typeof FETCH_BOOKS\n  payload: {\n    books: Book[]\n  }\n}\nexport type BookState = {\n  inTray: Book[]\n  books: Book[]\n  update: Book[]\n}\n\nexport type AddBookAction = {\n  type: typeof ADD_BOOK\n  payload: {\n    book: Book\n  }\n}\n\nexport type RemoveBookAction = {\n  type: typeof REMOVE_BOOK\n  payload: {\n    book: Book\n  }\n}\n\nexport type UpdateBookAction = {\n  type: typeof UPDATE_BOOK\n  payload: {\n    book: Book\n  }\n}\nexport type BookActions =\n  | AddBookAction\n  | RemoveBookAction\n  | UpdateBookAction\n  | SetBookAction\n\n// Borrow\n\nexport const ADD_BORROW = 'ADD_BORROW'\nexport const REMOVE_BORROW = 'REMOVE_BORROW'\nexport const UPDATE_BORROW = 'UPDATE_BORROW'\nexport const FETCH_BORROW = 'FETCH_BORROW'\nexport type Borrow = {\n  _id: string\n  borrowerId: User[]\n  bookId: Book[]\n}\nexport type BorrowState = {\n  inTray: Borrow[]\n  borrow: Borrow[]\n}\n\nexport type AddBorrowAction = {\n  //remove\n  type: typeof ADD_BORROW\n  payload: {\n    bookId: Borrow\n  }\n}\n//might remove this\nexport type SetBorrowAction = {\n  type: typeof FETCH_BORROW\n  payload: {\n    borrow: Borrow[]\n  }\n}\n\nexport type RemoveBorrowAction = {\n  type: typeof REMOVE_BORROW\n  payload: {\n    bookId: Borrow\n  }\n}\n\nexport type UpdateBorrowAction = {\n  type: typeof UPDATE_BORROW\n  payload: {\n    borrow: Borrow\n  }\n}\nexport type BorrowActions =\n  | AddBorrowAction\n  | RemoveBorrowAction\n  | UpdateBorrowAction\n  | SetBorrowAction\n\n//User\nexport const ADD_USER = 'ADD_USER'\nexport const REMOVE_USER = 'REMOVE_USER'\nexport const UPDATE_USER = 'UPDATE_USER'\nexport const FETCH_USERS = 'FETCH_USERS'\nexport const LOGIN = 'LOGIN'\nexport type User = {\n  _id?: string\n  firstName: string\n  lastName: string\n  email: string\n  password: string\n  role: string\n}\nexport type Login = {\n  email: string\n  password: string\n}\nexport type SetUserAction = {\n  type: typeof FETCH_USERS\n  payload: {\n    users: User[]\n  }\n}\nexport type UserState = {\n  inTray: User[]\n  users: User[]\n  user?: User\n  update: User[]\n}\n\nexport type AddUserAction = {\n  type: typeof ADD_USER\n  payload: {\n    user: User\n  }\n}\nexport type loginAction = {\n  type: typeof LOGIN\n  payload: {\n    user: User\n  }\n}\n\nexport type RemoveUserAction = {\n  type: typeof REMOVE_USER\n  payload: {\n    user: User\n  }\n}\n\nexport type UpdateUserAction = {\n  type: typeof UPDATE_USER\n  payload: {\n    user: User\n  }\n}\nexport type UserActions =\n  | AddUserAction\n  | RemoveUserAction\n  | UpdateUserAction\n  | SetUserAction\n  | loginAction\n\nexport type AppState = {\n  author: AuthorState\n  book: BookState\n  user: UserState\n  borrow: BorrowState\n}\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Dropdown } from 'semantic-ui-react'\n\nexport const DropDown = () => {\n  const history = useHistory()\n  const user = JSON.parse(localStorage.getItem('userInfo') as string)\n  const handleLogout = () => {\n    localStorage.removeItem('userInfo')\n    history.push('/')\n  }\n  const handleBorrowed = () => {\n    history.push('/borrowed')\n  }\n  return (\n    <>\n      <Dropdown\n        text={user.user['firstName']}\n        icon=\"user\"\n        floating\n        labeled\n        button\n        className=\"icon\"\n      >\n        <Dropdown.Menu>\n          {user.user['role'] === 'admin' && (\n            <Dropdown.Item onClick={() => history.push('/admin')}>\n              Manage Books\n            </Dropdown.Item>\n          )}\n          {user.user['role'] === 'admin' && (\n            <Dropdown.Item onClick={() => history.push('/admin/author')}>\n              Manage Authors\n            </Dropdown.Item>\n          )}\n          {user.user['role'] === 'admin' && (\n            <Dropdown.Item>Manage Users</Dropdown.Item>\n          )}\n          <Dropdown.Item onClick={handleBorrowed}> Borrowed</Dropdown.Item>\n          <Dropdown.Item onClick={handleLogout}>Logout</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </>\n  )\n}\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nimport { Link } from 'react-router-dom'\nimport { Input, Menu, Icon, Button } from 'semantic-ui-react'\nimport { AppState } from '../../types'\nimport { DropDown } from '../dropdown/dropdown'\n\nexport const Header = () => {\n  const history = useHistory()\n  const handleLogin = () => {\n    history.push('/login')\n  }\n  const handleRegister = () => {\n    history.push('/register')\n  }\n  const borrowed = useSelector((state: AppState) => state.book.inTray)\n  console.log(borrowed)\n  //const token = JSON.parse(localStorage.getItem('userInfo') as string).user['email']\n  const user = JSON.parse(localStorage.getItem('userInfo') as string)\n    ? JSON.parse(localStorage.getItem('userInfo') as string).user\n    : null\n\n  return (\n    <Menu secondary>\n      <Link to=\"/\">\n        <Menu.Item name=\"BK Library\" />\n      </Link>\n\n      <Menu.Menu position=\"left\">\n        <Menu.Item>\n          <Input icon=\"search\" placeholder=\"Search...\" />\n        </Menu.Item>\n      </Menu.Menu>\n\n      <Menu.Menu position=\"right\">\n        {!user && <Menu.Item name=\"login\" onClick={handleLogin} />}\n        {!user && <Menu.Item name=\"register\" onClick={handleRegister} />}\n        {user && (\n          <>\n            <Button onClick={(e) => history.push('/checkout')}>\n              <Icon name=\"shopping cart\" /> {borrowed.length}\n            </Button>\n            <DropDown />\n          </>\n        )}\n      </Menu.Menu>\n    </Menu>\n  )\n}\n","import { useDispatch, useSelector } from 'react-redux'\nimport { useState, useEffect, useMemo } from 'react'\n\nimport { AppState, Book } from '../../types'\nimport { fetchBooks } from '../../redux/actions/book'\n\nconst useBooks = () => {\n  const [booksList, setBooksList] = useState<Book[]>([])\n  const books = useSelector((state: AppState) => state.book.books)\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(fetchBooks())\n  }, [dispatch])\n\n  return [books]\n}\n\nexport default useBooks\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport DataTable from 'react-data-table-component'\nimport { Link } from 'react-router-dom'\nimport { Icon } from 'semantic-ui-react'\n\nimport { columns } from '../components/columns/columns'\nimport { AppState } from '../types'\nimport { addBook } from '../redux/actions/book'\nimport { Header } from '../components/header/header'\nimport useBooks from '../hooks/books/useBooks'\n\nexport default function Home() {\n  const dispatch = useDispatch()\n  const [books] = useBooks()\n  const book = useSelector((state: AppState) => state.book)\n  console.log(book)\n  const tableHeader = [\n    ...columns,\n    {\n      name: 'Borrow',\n      cell: (row: any) => (\n        <div>\n          <button\n            disabled={book.inTray.find((p) => p._id === row._id) ? true : false}\n            onClick={() => {\n              row.status = 'borrowed'\n              console.log(dispatch(addBook(row)))\n            }}\n          >\n            Borrow\n          </button>\n        </div>\n      ),\n    },\n    {\n      name: 'More...',\n      cell: (row: any) => (\n        <div>\n          <Link to={`/book/${row._id}`}>\n            <Icon name=\"eye\" size=\"large\" />\n          </Link>\n        </div>\n      ),\n    },\n  ]\n\n  return (\n    <>\n      <Header />\n      {\n        <DataTable\n          title=\"List of Books\"\n          columns={tableHeader}\n          data={books}\n          striped={true}\n          noDataComponent={<h2>LOADING.../No Data</h2>}\n          /*           pagination={true}\n           */\n        />\n      }\n    </>\n  )\n}\n","import { Dispatch } from 'redux'\n\nimport {\n  ADD_AUTHOR,\n  Author,\n  AuthorActions,\n  FETCH_AUTHORS,\n  UPDATE_AUTHOR,\n} from '../../types'\n\nexport function addAuthor(author: Author): AuthorActions {\n  return {\n    type: ADD_AUTHOR,\n    payload: {\n      author,\n    },\n  }\n}\nexport function updateAuthor(author: Author): AuthorActions {\n  return {\n    type: UPDATE_AUTHOR,\n    payload: {\n      author,\n    },\n  }\n}\n\n// Async action processed by redux-thunk middleware\nexport function createAuthor(author: Author) {\n  return (dispatch: Dispatch) => {\n    return fetch(`https://salty-atoll-28842.herokuapp.com/api/v1/authors`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        authorization: `${author.token}`,\n      },\n      body: JSON.stringify(author),\n    })\n      .then((resp) => resp.json())\n      .then((author) => {\n        dispatch(addAuthor(author))\n      })\n  }\n}\nexport function setAuthors(authors: Author[]): AuthorActions {\n  return {\n    type: FETCH_AUTHORS,\n    payload: {\n      authors,\n    },\n  }\n}\nexport function fetchAuthorUpdate(update: Partial<Author>, authorId?: string) {\n  return (dispatch: Dispatch) => {\n    return fetch(\n      `https://salty-atoll-28842.herokuapp.com/api/v1/authors/${authorId}`,\n      {\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(update),\n      }\n    )\n      .then((resp) => resp.json())\n      .then((authors) => {\n        dispatch(updateAuthor(authors))\n      })\n  }\n}\n\nexport function fetchAuthors() {\n  return (dispatch: Dispatch) => {\n    return fetch(`https://salty-atoll-28842.herokuapp.com/api/v1/authors`)\n      .then((resp) => resp.json())\n      .then((authors) => {\n        dispatch(setAuthors(authors))\n      })\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport { Formik } from 'formik'\nimport { useDispatch } from 'react-redux'\nimport { Form } from 'semantic-ui-react'\nimport * as yup from 'yup'\n\nimport { createAuthor } from '../redux/actions/author'\nimport { Header } from '../components/header/header'\n\nexport function AddAuthor() {\n  const dispatch = useDispatch()\n  const [book, setBook] = useState([])\n  const token = JSON.parse(localStorage.getItem('userInfo') as string)\n\n  // check for status code 403 (and when user is not logged as admin)\n  setTimeout(() => console.log(token), 2000)\n  return (\n    <div>\n      <Header />\n      <h1>Add An Author</h1>\n      <Formik\n        initialValues={{\n          firstName: '',\n          lastName: '',\n          token: `${\n            JSON.parse(localStorage.getItem('userInfo') as string).token\n          }`,\n          books: [],\n        }}\n        validationSchema={yup.object({\n          firstName: yup\n            .string()\n            .min(3, 'must be at least 3 character')\n            .max(25, 'must be 25 characters or less')\n            .required('required field'),\n          lastName: yup\n            .string()\n            .min(3, 'must be at least 3 character')\n            .max(25, 'must be 25 characters or less')\n            .required('required field'),\n        })}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          JSON.stringify(values, null, 2)\n          dispatch(createAuthor(values))\n          resetForm()\n        }}\n      >\n        {(props) => (\n          <Form onSubmit={props.handleSubmit}>\n            <Form.Group>\n              <Form.Input\n                placeholder=\"firstName\"\n                type=\"text\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.firstName}\n                name=\"firstName\"\n              />\n              {props.errors.firstName && (\n                <div id=\"feedback\">{props.errors.firstName}</div>\n              )}\n              <Form.Input\n                placeholder=\"lastName\"\n                type=\"text\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.lastName}\n                name=\"lastName\"\n              />\n              {props.errors.lastName && (\n                <div id=\"feedback\">{props.errors.lastName}</div>\n              )}\n            </Form.Group>\n\n            <Form.Button type=\"submit\">Submit</Form.Button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Formik } from 'formik'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form } from 'semantic-ui-react'\nimport * as yup from 'yup'\n\nimport { createBook } from '../redux/actions/book'\nimport { AppState } from '../types'\nimport { Header } from '../components/header/header'\n\nexport function AddBook() {\n  const options = [\n    { key: 'm', text: 'Programming', value: 'Programming' },\n    { key: 'f', text: 'Science', value: 'Science' },\n    { key: 'o', text: 'Other', value: 'other' },\n  ]\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const [book, setBook] = useState([])\n\n  const authors = useSelector((state: AppState) => state.author)\n\n  return (\n    <div>\n      <Header />\n      <h1>Add A Book</h1>\n      <Formik\n        initialValues={{\n          name: '',\n          isbn: '',\n          category: [],\n          publisher: '',\n          description: '',\n          status: 'available',\n          author: [],\n          publishedYear: 0,\n        }}\n        validationSchema={yup.object({\n          name: yup\n            .string()\n            .max(25, 'must be 25 characters or less')\n            .required('required field'),\n          isbn: yup.number().required('required field'),\n          publisher: yup\n            .string()\n            .max(25, 'must be 25 characters or less')\n            .required('required field'),\n          description: yup\n            .string()\n            .max(55, 'must be 55 characters or less')\n            .required('required field'),\n          publishedYear: yup.number().required('required field'),\n        })}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          JSON.stringify(values, null, 2)\n          dispatch(createBook(values))\n          history.push('/admin')\n          resetForm()\n        }}\n      >\n        {(props) => (\n          <Form onSubmit={props.handleSubmit}>\n            <Form.Group>\n              <Form.Input\n                placeholder=\"name\"\n                type=\"text\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.name}\n                name=\"name\"\n              />\n              {props.errors.name && (\n                <div id=\"feedback\">{props.errors.name}</div>\n              )}\n              <Form.Input\n                placeholder=\"isbn\"\n                type=\"text\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.isbn}\n                name=\"isbn\"\n              />\n              {props.errors.isbn && (\n                <div id=\"feedback\">{props.errors.isbn}</div>\n              )}\n            </Form.Group>\n            <Form.Group>\n              <Form.Input\n                placeholder=\"publisher\"\n                type=\"text\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.publisher}\n                name=\"publisher\"\n              />\n              {props.errors.publisher && (\n                <div id=\"feedback\">{props.errors.publisher}</div>\n              )}\n              <Form.Input\n                placeholder=\"description\"\n                type=\"text\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.description}\n                name=\"description\"\n              />\n              {props.errors.publisher && (\n                <div id=\"feedback\">{props.errors.description}</div>\n              )}\n            </Form.Group>\n            <Form.Group>\n              <Form.Field\n                control=\"select\"\n                multiple\n                onChange={props.handleChange}\n                label=\"Authors\"\n                value={props.values.author}\n                name=\"author\"\n              >\n                {authors.authors.map((author) => {\n                  console.log(authors)\n                  return (\n                    <option key={author._id} value={author._id}>\n                      {author.firstName}\n                    </option>\n                  )\n                })}\n              </Form.Field>\n              <Form.Field\n                onChange={props.handleChange}\n                control=\"select\"\n                name=\"category\"\n                label=\"Category\"\n                placeholder=\"Category\"\n                value={props.values.category}\n              >\n                {options.map((cat) => {\n                  return (\n                    <option key={cat.key} value={cat.key}>\n                      {cat.text}\n                    </option>\n                  )\n                })}\n              </Form.Field>\n            </Form.Group>\n            <Form.Group>\n              <Form.Input\n                placeholder=\"published Year\"\n                type=\"text\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.publishedYear}\n                name=\"publishedYear\"\n              />\n              {props.errors.publishedYear && (\n                <div id=\"feedback\">{props.errors.publishedYear}</div>\n              )}\n              <Form.Button type=\"submit\">Submit</Form.Button>\n            </Form.Group>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Formik } from 'formik'\nimport { useDispatch } from 'react-redux'\nimport { Form } from 'semantic-ui-react'\nimport * as yup from 'yup'\nimport { useHistory } from 'react-router-dom'\n\nimport { userLogin } from '../redux/actions/user'\n\nexport function Login() {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const user = JSON.parse(localStorage.getItem('userInfo') as string)\n    ? JSON.parse(localStorage.getItem('userInfo') as string).user['role']\n    : ''\n  const handleLogin = () => {\n    if (user === 'admin') return history.push('/admin')\n    if (user === 'normal') return history.push('/borrowed')\n  }\n  return (\n    <div>\n      <h1>Login Page</h1>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validationSchema={yup.object({\n          email: yup\n            .string()\n            .email('invalid email address')\n            .required('required field'),\n          password: yup\n            .string()\n            .max(45, 'must be 25 characters or less')\n            .required('required field'),\n        })}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          JSON.stringify(values, null, 2)\n          dispatch(userLogin(values))\n          resetForm()\n          handleLogin()\n        }}\n      >\n        {(props) => (\n          <Form onSubmit={props.handleSubmit}>\n            <Form.Group widths=\"equal\">\n              <Form.Input\n                placeholder=\"email\"\n                type=\"text\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.email}\n                name=\"email\"\n              />\n              {props.errors.email && (\n                <div id=\"feedback\">{props.errors.email}</div>\n              )}\n              <Form.Input\n                placeholder=\"password\"\n                type=\"password\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.password}\n                name=\"password\"\n              />\n              {props.errors.password && (\n                <div id=\"feedback\">{props.errors.password}</div>\n              )}\n            </Form.Group>\n\n            <Form.Button type=\"submit\">Login</Form.Button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  )\n}\n","import { Dispatch } from 'redux'\n\nimport { ADD_USER, User, UserActions, LOGIN, Login } from '../../types'\n\nexport function addUser(user: User): UserActions {\n  return {\n    type: ADD_USER,\n    payload: {\n      user,\n    },\n  }\n}\n//logging user in\nexport function login(user: User): UserActions {\n  return {\n    type: LOGIN,\n    payload: {\n      user,\n    },\n  }\n}\n// Async action processed by redux-thunk middleware\nexport function createUser(user: User) {\n  return (dispatch: Dispatch) => {\n    return fetch(`https://salty-atoll-28842.herokuapp.com/api/v1/users`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(user),\n    })\n      .then((resp) => resp.json())\n      .then((user) => {\n        dispatch(addUser(user))\n      })\n  }\n}\n\nexport function userLogin(user: Login) {\n  return (dispatch: Dispatch) => {\n    return fetch(`https://salty-atoll-28842.herokuapp.com/api/v1/users/login`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        //authorization: '123',\n      },\n      body: JSON.stringify(user),\n    })\n      .then((resp) => resp.json())\n      .then((user) => {\n        dispatch(login(user))\n      })\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport { Formik } from 'formik'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form } from 'semantic-ui-react'\nimport * as yup from 'yup'\n\nimport { createUser } from '../redux/actions/user'\nimport { AppState } from '../types'\nimport { Header } from '../components/header/header'\n\nexport function Register() {\n  const dispatch = useDispatch()\n  const [book, setBook] = useState([])\n\n  const authors = useSelector((state: AppState) => state.author)\n\n  return (\n    <div>\n      <Header />\n      <h1>User Registration</h1>\n      <Formik\n        initialValues={{\n          firstName: '',\n          lastName: '',\n          username: '',\n          email: '',\n          password: '',\n          passwordConfirmation: '',\n          role: 'normal',\n        }}\n        validationSchema={yup.object({\n          firstName: yup\n            .string()\n            .min(3, 'must be at least 3 character')\n            .max(25, 'must be 25 characters or less')\n            .required('required field'),\n          lastName: yup\n            .string()\n            .min(3, 'must be at least 3 character')\n            .max(25, 'must be 25 characters or less')\n            .required('required field'),\n          password: yup.string().required('Password is required'),\n          passwordConfirmation: yup\n            .string()\n            .oneOf([yup.ref('password'), ''], 'Passwords must match'),\n        })}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          alert(JSON.stringify(values, null, 2))\n          dispatch(createUser(values))\n          resetForm()\n          alert(JSON.stringify(values, null, 2))\n        }}\n      >\n        {(props) => (\n          <Form onSubmit={props.handleSubmit}>\n            <Form.Group>\n              <Form.Input\n                placeholder=\"firstName\"\n                type=\"text\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.firstName}\n                name=\"firstName\"\n              />\n              {props.errors.firstName && (\n                <div id=\"feedback\">{props.errors.firstName}</div>\n              )}\n              <Form.Input\n                placeholder=\"lastName\"\n                type=\"text\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.lastName}\n                name=\"lastName\"\n              />\n              {props.errors.lastName && (\n                <div id=\"feedback\">{props.errors.lastName}</div>\n              )}\n            </Form.Group>\n            <Form.Group>\n              <Form.Input\n                placeholder=\"lastName\"\n                type=\"text\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.lastName}\n                name=\"lastName\"\n              />\n              {props.errors.lastName && (\n                <div id=\"feedback\">{props.errors.lastName}</div>\n              )}\n              <Form.Input\n                placeholder=\"username\"\n                type=\"text\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.username}\n                name=\"username\"\n              />\n              {props.errors.username && (\n                <div id=\"feedback\">{props.errors.username}</div>\n              )}\n            </Form.Group>\n            <Form.Group>\n              <Form.Input\n                placeholder=\"email\"\n                type=\"text\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.email}\n                name=\"email\"\n              />\n              {props.errors.email && (\n                <div id=\"feedback\">{props.errors.email}</div>\n              )}\n              <Form.Input\n                placeholder=\"password\"\n                type=\"password\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.password}\n                name=\"password\"\n              />\n              {props.errors.password && (\n                <div id=\"feedback\">{props.errors.password}</div>\n              )}\n            </Form.Group>\n            <Form.Group>\n              <Form.Input\n                placeholder=\"confirm password\"\n                type=\"password\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.passwordConfirmation}\n                name=\"passwordConfirmation\"\n              />\n              {props.errors.passwordConfirmation && (\n                <div id=\"feedback\">{props.errors.passwordConfirmation}</div>\n              )}\n\n              <Form.Button type=\"submit\">Register</Form.Button>\n            </Form.Group>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { Card, Icon } from 'semantic-ui-react'\nimport { AppState } from '../../types'\nimport { useParams } from 'react-router-dom'\n\nconst extra = (\n  <Link to=\"/\">\n    <Icon name=\"angle double left\" />\n  </Link>\n)\n\nexport function Book() {\n  const { id } = useParams()\n  const book = useSelector((state: AppState) =>\n    state.book.books.find((p) => p._id === id)\n  )\n  return (\n    <Card\n      style={{\n        width: '50%',\n        marginLeft: '25%',\n      }}\n      image=\"../../cover.jpg\"\n      header={book?.name}\n      meta={book?.isbn}\n      description={book?.description}\n      extra={extra}\n    />\n  )\n}\n","import React from 'react'\n\nimport { Book } from '../components/book/book'\nimport { Header } from '../components/header/header'\n\nexport default function SingleBook() {\n  return (\n    <>\n      <Header />\n      <Book />\n    </>\n  )\n}\n","import { Dispatch } from 'redux'\n\nimport {\n  ADD_BORROW,\n  Borrow,\n  Book,\n  BorrowActions,\n  FETCH_BORROW,\n  REMOVE_BORROW,\n} from '../../types'\n\nexport function addBorrow(bookId: Borrow): BorrowActions {\n  return {\n    type: ADD_BORROW,\n    payload: {\n      bookId,\n    },\n  }\n}\nexport function removeBorrow(bookId: Borrow): BorrowActions {\n  return {\n    type: REMOVE_BORROW,\n    payload: {\n      bookId,\n    },\n  }\n}\nexport function setBorrow(borrow: Borrow[]): BorrowActions {\n  return {\n    type: FETCH_BORROW,\n    payload: {\n      borrow,\n    },\n  }\n}\nconst user = JSON.parse(localStorage.getItem('userInfo') as string)\n  ? JSON.parse(localStorage.getItem('userInfo') as string).user['_id']\n  : null\n// Async action processed by redux-thunk middleware\nexport function createBorrow(bookId: any, borrowerId: any = user) {\n  return (dispatch: Dispatch) => {\n    return fetch(`https://salty-atoll-28842.herokuapp.com/api/v1/borrows`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify({ bookId, borrowerId }),\n    }).then((resp) => resp.json())\n  }\n}\n\nexport function borrowBook(borrow: Borrow) {\n  return (dispatch: Dispatch) => {\n    return fetch(`https://salty-atoll-28842.herokuapp.com/api/v1/borrows`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(borrow),\n    })\n      .then((resp) => resp.json())\n      .then((borrow) => {\n        dispatch(addBorrow(borrow))\n      })\n  }\n}\nexport function fetchUserBorrow() {\n  return (dispatch: Dispatch) => {\n    return fetch(\n      `https://salty-atoll-28842.herokuapp.com/api/v1/borrows/${user}`\n    )\n      .then((resp) => resp.json())\n      .then((borrows) => {\n        dispatch(setBorrow(borrows))\n      })\n  }\n}\n","import { useDispatch, useSelector } from 'react-redux'\nimport { useState, useEffect, useMemo } from 'react'\n\nimport { AppState, Borrow } from '../../types'\nimport { fetchUserBorrow } from '../../redux/actions/borrow'\n\nconst useBorrows = () => {\n  const borrows = useSelector((state: AppState) => state.borrow.borrow)\n  const [borrowsList, setBorrowsList] = useState<Borrow[]>([])\n  const user = JSON.parse(localStorage.getItem('userInfo') as string)\n    ? JSON.parse(localStorage.getItem('userInfo') as string).user['_id']\n    : null\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(fetchUserBorrow())\n  }, [])\n  /* useMemo(() => {\n    setBorrowsList(searchBorrow(borrows))\n  }, [borrows])\n  function searchBorrow(userBorrows: Borrow[]) {\n    return userBorrows\n      ? userBorrows.filter((borrow: Borrow) =>\n          borrow.borrowerId?.includes(user)\n        )\n      : []\n  } */\n  console.log(user)\n  return [borrowsList]\n}\n\nexport default useBorrows\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport DataTable from 'react-data-table-component'\nimport { Link } from 'react-router-dom'\nimport { Icon } from 'semantic-ui-react'\n\nimport { columns } from '../components/columns/columns'\nimport { AppState } from '../types'\nimport { createBorrow, addBorrow, removeBorrow } from '../redux/actions/borrow'\nimport { addBook, removeBook } from '../redux/actions/book'\nimport { Header } from '../components/header/header'\nimport useBorrows from '../hooks/borrows/useBorrows'\n\nexport default function Borrows() {\n  const dispatch = useDispatch()\n  const [borrows] = useBorrows()\n\n  const borrow = useSelector((state: AppState) => state.borrow)\n  const books = useSelector((state: AppState) => state.book)\n\n  console.log(books)\n  const uBorrow: any = []\n  borrow.borrow.map((p) => {\n    uBorrow.push(p.bookId)\n  })\n  console.log(borrow)\n  console.log(uBorrow)\n  const tableHeader = [\n    ...columns,\n    {\n      name: 'Borrow',\n      cell: (row: any) => (\n        <div>\n          {borrows && (\n            <button\n              onClick={() => {\n                console.log(dispatch(removeBorrow(row.id)))\n              }}\n            >\n              Return\n            </button>\n          )}\n        </div>\n      ),\n    },\n  ]\n\n  return (\n    <>\n      <Header />\n      {\n        <DataTable\n          title=\"List of Borrowed Books\"\n          columns={tableHeader}\n          data={uBorrow[0]}\n          striped={true}\n          noDataComponent={<h2>LOADING.../No Data</h2>}\n        />\n      }\n    </>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport DataTable from 'react-data-table-component'\nimport { Icon } from 'semantic-ui-react'\n\nimport { Header } from '../components/header/header'\n\nexport default function Admin() {\n  const history = useHistory()\n  const data = [\n    { id: 1, operation: 'Authors' },\n    { id: 2, operation: 'Books' },\n    { id: 3, operation: 'Users' },\n  ]\n  const handleClick = () => {\n    data.map((p, index) => {\n      if (data[index].operation === 'Authors') history.push('/add-author')\n      if (data[index].operation === 'Books') history.push('/add-book')\n      if (data[index].operation === 'Users') history.push('/register')\n    })\n  }\n  const columns = [\n    {\n      name: 'Operations',\n      selector: 'operation',\n      sortable: true,\n    },\n    {\n      name: 'Add',\n      cell: (row: any) => (\n        <div>\n          <button onClick={handleClick}>\n            {' '}\n            <Icon name=\"plus circle\" />\n            Add\n          </button>\n        </div>\n      ),\n    },\n    {\n      name: 'Remove',\n      cell: (row: any) => (\n        <div>\n          <button>\n            <Icon name=\"trash\" />\n            Delete\n          </button>\n        </div>\n      ),\n    },\n    {\n      name: 'Update',\n      cell: (row: any) => (\n        <div>\n          <button>\n            <Icon name=\"pencil alternate\" /> Update\n          </button>\n        </div>\n      ),\n    },\n  ]\n\n  return (\n    <>\n      <Header />\n      <DataTable\n        title=\"Welcome Admin\"\n        columns={columns}\n        data={data}\n        striped={true}\n      />\n    </>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport DataTable from 'react-data-table-component'\nimport { Icon } from 'semantic-ui-react'\nimport { useHistory, Link } from 'react-router-dom'\n\nimport { AppState } from '../types'\nimport { updateBook, deleteBook } from '../redux/actions/book'\nimport { Header } from '../components/header/header'\nimport useBooks from '../hooks/books/useBooks'\n\nexport default function ManageBooks() {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const [books] = useBooks()\n  const book = useSelector((state: AppState) => state.book)\n  console.log(book)\n  const tableHeader = [\n    {\n      name: 'Name',\n      selector: 'name',\n      sortable: true,\n    },\n    {\n      name: 'Remove',\n      cell: (row: any) => (\n        <div>\n          <button\n            onClick={() => {\n              dispatch(deleteBook(row._id))\n              history.push('/admin')\n            }}\n          >\n            <Icon name=\"trash\" />\n            Delete\n          </button>\n        </div>\n      ),\n    },\n    {\n      name: 'Update',\n      cell: (row: any) => (\n        <div>\n          <Link to={`/update-book/${row._id}`}>\n            <button\n              onClick={() => {\n                console.log(dispatch(updateBook(row)))\n              }}\n            >\n              <Icon name=\"pencil alternate\" /> Update\n            </button>\n          </Link>\n        </div>\n      ),\n    },\n    {\n      name: 'Add',\n      cell: (row: any) => (\n        <div>\n          <button onClick={() => history.push('/add-book')}>\n            <Icon name=\"plus circle\" />\n            Add\n          </button>\n        </div>\n      ),\n    },\n  ]\n\n  return (\n    <>\n      <Header />\n      {\n        <DataTable\n          title=\"List of Books\"\n          columns={tableHeader}\n          data={books}\n          striped={true}\n          noDataComponent={<h2>LOADING.../No Data</h2>}\n        />\n      }\n    </>\n  )\n}\n","import { useDispatch, useSelector } from 'react-redux'\nimport { useState, useEffect } from 'react'\n\nimport { AppState, Author } from '../../types'\nimport { fetchAuthors } from '../../redux/actions/author'\n\nconst useAuthors = () => {\n  const [authorList, setAuthorList] = useState<Author[]>([])\n  const authors = useSelector((state: AppState) => state.author.authors)\n  const dispatch = useDispatch()\n  useEffect(() => {\n    console.log(dispatch(fetchAuthors()))\n  }, [dispatch])\n\n  return authors\n}\n\nexport default useAuthors\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport DataTable from 'react-data-table-component'\nimport { Icon } from 'semantic-ui-react'\nimport { useHistory, Link } from 'react-router-dom'\n\nimport { updateBook, deleteBook } from '../redux/actions/book'\nimport { Header } from '../components/header/header'\nimport useAuthors from '../hooks/authors/useauthors'\n\nexport default function ManageAuthors() {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const authors = useAuthors()\n  console.log(authors)\n  const tableHeader = [\n    {\n      name: 'FirstName',\n      selector: 'firstName',\n      sortable: true,\n    },\n    {\n      name: 'Remove',\n      cell: (row: any) => (\n        <div>\n          <button\n            onClick={() => {\n              console.log(dispatch(deleteBook(row._id)))\n              history.push('/')\n            }}\n          >\n            <Icon name=\"trash\" />\n            Delete\n          </button>\n        </div>\n      ),\n    },\n    {\n      name: 'Update',\n      cell: (row: any) => (\n        <div>\n          <Link to={`/update-author/${row._id}`}>\n            <button\n              onClick={() => {\n                console.log(dispatch(updateBook(row)))\n              }}\n            >\n              <Icon name=\"pencil alternate\" /> Update\n            </button>\n          </Link>\n        </div>\n      ),\n    },\n    {\n      name: 'Add',\n      cell: (row: any) => (\n        <div>\n          <button onClick={() => history.push('/add-author')}>\n            <Icon name=\"plus circle\" />\n            Add\n          </button>\n        </div>\n      ),\n    },\n  ]\n\n  return (\n    <>\n      <Header />\n      {\n        <DataTable\n          title=\"List of Books\"\n          columns={tableHeader}\n          data={authors}\n          striped={true}\n          noDataComponent={<h2>LOADING.../No Data</h2>}\n        />\n      }\n    </>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Formik } from 'formik'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form } from 'semantic-ui-react'\nimport * as yup from 'yup'\n\nimport { fetchUpdate } from '../redux/actions/book'\nimport { AppState } from '../types'\nimport { fetchAuthors } from '../redux/actions/author'\nimport { Header } from '../components/header/header'\n\nexport function UpdateBook() {\n  const options = [\n    { key: 'm', text: 'Programming', value: 'Programming' },\n    { key: 'f', text: 'Science', value: 'Science' },\n    { key: 'o', text: 'Other', value: 'other' },\n  ]\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const { id } = useParams()\n  useEffect(() => {\n    dispatch(fetchAuthors())\n  }, [dispatch])\n\n  const authors = useSelector((state: AppState) => state.author)\n  const book = useSelector((state: AppState) => state.book.update)\n\n  return (\n    <div>\n      <Header />\n      <h1>Update A Book</h1>\n      <Formik\n        initialValues={{\n          name: book[0].name,\n          isbn: book[0].isbn,\n          category: book[0].category,\n          publisher: book[0].publisher,\n          description: book[0].description,\n          status: 'available',\n          author: book[0].authors,\n          publishedYear: book[0].publishedYear,\n        }}\n        validationSchema={yup.object({\n          name: yup\n            .string()\n            .max(25, 'must be 25 characters or less')\n            .required('required field'),\n          isbn: yup.number().required('required field'),\n          publisher: yup\n            .string()\n            .max(25, 'must be 25 characters or less')\n            .required('required field'),\n          description: yup\n            .string()\n            .max(55, 'must be 55 characters or less')\n            .required('required field'),\n          publishedYear: yup.number().required('required field'),\n        })}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          JSON.stringify(values, null, 2)\n          dispatch(fetchUpdate(values, id))\n          history.push('/admin')\n          resetForm()\n        }}\n      >\n        {(props) => (\n          <Form onSubmit={props.handleSubmit}>\n            <Form.Group>\n              <Form.Input\n                placeholder=\"name\"\n                type=\"text\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.name}\n                name=\"name\"\n              />\n              {props.errors.name && (\n                <div id=\"feedback\">{props.errors.name}</div>\n              )}\n              <Form.Input\n                placeholder=\"isbn\"\n                type=\"text\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.isbn}\n                name=\"isbn\"\n              />\n              {props.errors.isbn && (\n                <div id=\"feedback\">{props.errors.isbn}</div>\n              )}\n            </Form.Group>\n            <Form.Group>\n              <Form.Input\n                placeholder=\"publisher\"\n                type=\"text\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.publisher}\n                name=\"publisher\"\n              />\n              {props.errors.publisher && (\n                <div id=\"feedback\">{props.errors.publisher}</div>\n              )}\n              <Form.Input\n                placeholder=\"description\"\n                type=\"text\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.description}\n                name=\"description\"\n              />\n              {props.errors.publisher && (\n                <div id=\"feedback\">{props.errors.description}</div>\n              )}\n            </Form.Group>\n            <Form.Group>\n              <Form.Field\n                control=\"select\"\n                multiple\n                onChange={props.handleChange}\n                label=\"Authors\"\n                value={props.values.author}\n                name=\"author\"\n              >\n                {authors.authors.map((author) => {\n                  console.log(authors)\n                  return (\n                    <option key={author._id} value={author._id}>\n                      {author.firstName}\n                    </option>\n                  )\n                })}\n              </Form.Field>\n              <Form.Field\n                onChange={props.handleChange}\n                control=\"select\"\n                name=\"category\"\n                label=\"Category\"\n                placeholder=\"Category\"\n                value={props.values.category}\n              >\n                {options.map((cat) => {\n                  return (\n                    <option key={cat.key} value={cat.key}>\n                      {cat.text}\n                    </option>\n                  )\n                })}\n              </Form.Field>\n            </Form.Group>\n            <Form.Group>\n              <Form.Input\n                placeholder=\"published Year\"\n                type=\"text\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.publishedYear}\n                name=\"publishedYear\"\n              />\n              {props.errors.publishedYear && (\n                <div id=\"feedback\">{props.errors.publishedYear}</div>\n              )}\n              <Form.Button type=\"submit\">Update</Form.Button>\n            </Form.Group>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Formik } from 'formik'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form } from 'semantic-ui-react'\nimport { useParams } from 'react-router-dom'\nimport * as yup from 'yup'\n\nimport { Header } from '../components/header/header'\nimport { AppState } from '../types'\nimport { fetchAuthorUpdate } from '../redux/actions/author'\n\nexport function UpdateAuthor() {\n  const { id } = useParams()\n  const dispatch = useDispatch()\n  const token = JSON.parse(localStorage.getItem('userInfo') as string)\n  const author = useSelector((state: AppState) => state.author.update)\n\n  // check for status code 403 (and when user is not logged as admin)\n  setTimeout(() => console.log(token), 2000)\n  return (\n    <div>\n      <Header />\n      <h1>Add An Author</h1>\n      <Formik\n        initialValues={{\n          firstName: '',\n          lastName: '',\n          token: `${\n            JSON.parse(localStorage.getItem('userInfo') as string).token\n          }`,\n          books: [],\n        }}\n        validationSchema={yup.object({\n          firstName: yup\n            .string()\n            .min(3, 'must be at least 3 character')\n            .max(25, 'must be 25 characters or less')\n            .required('required field'),\n          lastName: yup\n            .string()\n            .min(3, 'must be at least 3 character')\n            .max(25, 'must be 25 characters or less')\n            .required('required field'),\n        })}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          alert(JSON.stringify(values, null, 2))\n          dispatch(fetchAuthorUpdate(values, id))\n          resetForm()\n        }}\n      >\n        {(props) => (\n          <Form onSubmit={props.handleSubmit}>\n            <Form.Group>\n              <Form.Input\n                placeholder=\"firstName\"\n                type=\"text\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.firstName}\n                name=\"firstName\"\n              />\n              {props.errors.firstName && (\n                <div id=\"feedback\">{props.errors.firstName}</div>\n              )}\n              <Form.Input\n                placeholder=\"lastName\"\n                type=\"text\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.lastName}\n                name=\"lastName\"\n              />\n              {props.errors.lastName && (\n                <div id=\"feedback\">{props.errors.lastName}</div>\n              )}\n            </Form.Group>\n\n            <Form.Button type=\"submit\">Submit</Form.Button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, List, Icon } from 'semantic-ui-react'\nimport { Link, useHistory } from 'react-router-dom'\n\nimport { removeBook } from '../../redux/actions/book'\nimport { createBorrow, fetchUserBorrow } from '../../redux/actions/borrow'\n\nimport { AppState } from '../../types'\n\nfunction Checkout() {\n  const dispatch = useDispatch()\n  const books = useSelector((state: AppState) => state.book.inTray)\n  const history = useHistory()\n  const handleBorrow = () => {\n    console.log(dispatch(createBorrow(books)))\n    history.push('/')\n    books.length = 0\n    alert('Confirm to borrow books')\n  }\n  return (\n    <>\n      <h4> List of Books to Borrow</h4>\n      {books.length <= 0 && (\n        <div>\n          <h4>No Book(s) in cart</h4>\n        </div>\n      )}\n      <Link to=\"/\">\n        {' '}\n        <Icon name=\"angle double left\" size=\"huge\" textAlign=\"center\" />\n      </Link>\n      {books.map((p) => (\n        <List divided key={p._id} className=\"content\">\n          <List.Item className=\"content__items\">\n            <List.Content floated=\"right\">\n              <Button onClick={() => dispatch(removeBook(p))}>Remove</Button>\n            </List.Content>\n            <Icon name=\"book\" />\n            <List.Content>{p.name}</List.Content>\n          </List.Item>\n        </List>\n      ))}\n      <Button onClick={handleBorrow}>Borrow</Button>\n    </>\n  )\n}\n\nexport default Checkout\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Home from './pages/Home'\nimport { AddAuthor } from './pages/Author'\nimport { AddBook } from './pages/Book'\nimport { Login } from './pages/Login'\nimport { Register } from './pages/Register'\nimport SingleBook from './pages/SingleBook'\nimport Borrows from './pages/Borrow'\nimport Admin from './pages/Admin'\nimport ManageBooks from './pages/ManageBook'\nimport ManageAuthors from './pages/ManageAuthor'\nimport { UpdateBook } from './pages/UpdateBook'\nimport { UpdateAuthor } from './pages/UpdateAuthor'\nimport Checkout from './components/checkout/checkout'\n\nconst Routes = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Home} />\n    <Route exact path=\"/admin\" component={ManageBooks} />\n    <Route exact path=\"/admin/author\" component={ManageAuthors} />\n    <Route exact path=\"/book/:id\" component={SingleBook} />\n    <Route exact path=\"/checkout\" component={Checkout} />\n    <Route exact path=\"/login\" component={Login} />\n    <Route exact path=\"/register\" component={Register} />\n    <Route exact path=\"/borrowed\" component={Borrows} />\n    <Route exact path=\"/add-author\" component={AddAuthor} />\n    <Route exact path=\"/add-user\" component={Register} />\n    <Route exact path=\"/add-book\" component={AddBook} />\n    <Route exact path=\"/ad\" component={Admin} />\n    <Route exact path=\"/update-book/:id\" component={UpdateBook} />\n    <Route exact path=\"/update-author/:id\" component={UpdateAuthor} />\n  </Switch>\n)\n\nexport default Routes\n","import React from 'react'\n\nimport Routes from './Routes'\n\nexport default function App() {\n  return (\n    <>\n      <Routes />\n    </>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  AuthorState,\n  ADD_AUTHOR,\n  AuthorActions,\n  REMOVE_AUTHOR,\n  UPDATE_AUTHOR,\n  FETCH_AUTHORS,\n} from '../../types'\n\nexport default function author(\n  state: AuthorState = {\n    authors: [],\n    inTray: [],\n    update: [],\n  },\n  action: AuthorActions\n): AuthorState {\n  switch (action.type) {\n    case ADD_AUTHOR: {\n      const { author } = action.payload\n      return { ...state, inTray: [...state.inTray, author] }\n    }\n    case FETCH_AUTHORS: {\n      const { authors } = action.payload\n      return { ...state, authors: [...authors] }\n    }\n    case UPDATE_AUTHOR: {\n      const { author } = action.payload\n      return { ...state, update: [author] }\n    }\n    default:\n      return state\n  }\n}\n","import {\n  BookState,\n  ADD_BOOK,\n  BookActions,\n  REMOVE_BOOK,\n  UPDATE_BOOK,\n  FETCH_BOOKS,\n} from '../../types'\n\nexport default function book(\n  state: BookState = {\n    inTray: [],\n    books: [],\n    update: [],\n  },\n  action: BookActions\n): BookState {\n  switch (action.type) {\n    case ADD_BOOK: {\n      const { book } = action.payload\n      //localStorage.setItem('userBook', JSON.stringify(book))\n      if (state.inTray.find((p) => p._id === book._id)) {\n        return state\n      }\n      return { ...state, inTray: [...state.inTray, book] }\n    }\n    case FETCH_BOOKS: {\n      const { books } = action.payload\n      return { ...state, books: [...books] }\n    }\n    case UPDATE_BOOK: {\n      const { book } = action.payload\n      return { ...state, update: [book] }\n    }\n    case REMOVE_BOOK: {\n      const { book } = action.payload\n      const index = state.inTray.findIndex((p) => p._id == book._id)\n      if (index >= 0) {\n        state.inTray.splice(index, 1)\n        return { ...state, inTray: [...state.inTray] }\n      }\n      return state\n    }\n    case UPDATE_BOOK:\n\n    default:\n      return state\n  }\n}\n","import {\n  UserState,\n  ADD_USER,\n  UserActions,\n  REMOVE_USER,\n  UPDATE_USER,\n  LOGIN,\n} from '../../types'\n\nexport default function user(\n  state: UserState = {\n    users: [],\n    inTray: [],\n    user: undefined,\n    update: [],\n  },\n  action: UserActions\n): UserState {\n  switch (action.type) {\n    case ADD_USER: {\n      const { user } = action.payload\n      return { ...state, inTray: [...state.inTray, user] }\n    }\n\n    case LOGIN: {\n      const { user } = action.payload\n      localStorage.setItem('userInfo', JSON.stringify(user))\n      return { ...state, user: user }\n    }\n    case REMOVE_USER:\n    case UPDATE_USER:\n    default:\n      return state\n  }\n}\n","import {\n  BorrowState,\n  ADD_BORROW,\n  BorrowActions,\n  REMOVE_BORROW,\n  UPDATE_BORROW,\n  FETCH_BORROW,\n} from '../../types'\n\nexport default function borrow(\n  state: BorrowState = {\n    inTray: [],\n    borrow: [],\n  },\n  action: BorrowActions\n): BorrowState {\n  switch (action.type) {\n    case ADD_BORROW: {\n      const { bookId } = action.payload\n      if (state.inTray.find((p) => p._id === bookId._id)) {\n        return state\n      }\n      return { ...state, inTray: [...state.inTray, bookId] }\n    }\n    case FETCH_BORROW: {\n      const { borrow } = action.payload\n      return { ...state, borrow: [...borrow] }\n    }\n\n    case REMOVE_BORROW: {\n      //deletes all books...hard to access books!\n      const { bookId } = action.payload\n      const index = state.borrow.findIndex((p) => p._id === bookId._id)\n      if (index >= 0) {\n        state.borrow.splice(index, 1)\n        return { ...state, borrow: [...state.borrow] }\n      }\n      return state\n    }\n    case UPDATE_BORROW:\n\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport author from './author'\nimport book from './book'\nimport user from './user'\nimport borrow from './borrow'\n\nconst createRootReducer = () =>\n  combineReducers({\n    author,\n    book,\n    user,\n    borrow,\n  })\n\nexport default createRootReducer\n","import { all, select, takeLatest } from 'redux-saga/effects'\n\n//saving state on localstorage\nfunction* saveState() {\n  const state = yield select()\n  yield localStorage.setItem('library-state', JSON.stringify(state))\n}\n\nexport default function* rootSaga() {\n  yield all([takeLatest('*', saveState)])\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport thunk from 'redux-thunk'\n\nimport { AppState } from '../types'\nimport createRootReducer from './reducers'\nimport rootSaga from './sagas'\n\nconst initState: AppState = {\n  author: {\n    inTray: [],\n    authors: [],\n    update: [],\n  },\n  book: {\n    inTray: [],\n    books: [],\n    update: [],\n  },\n  user: {\n    inTray: [],\n    users: [],\n    update: [],\n  },\n  borrow: {\n    inTray: [],\n    borrow: [],\n  },\n}\n\nexport default function makeStore(initialState = initState) {\n  const sagaMiddleware = createSagaMiddleware()\n  const middlewares = [sagaMiddleware, thunk]\n  let composeEnhancers = compose\n\n  if (process.env.NODE_ENV === 'development') {\n    if ((window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n      composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    }\n  }\n  const localStorageState = localStorage.getItem('library-state')\n  if (localStorageState) {\n    initialState = JSON.parse(localStorageState)\n  }\n  const store = createStore(\n    createRootReducer(),\n    initialState,\n    composeEnhancers(applyMiddleware(...middlewares))\n  )\n\n  sagaMiddleware.run(rootSaga)\n\n  if ((module as any).hot) {\n    ;(module as any).hot.accept('./reducers', () => {\n      const nextReducer = require('./reducers').default\n      store.replaceReducer(nextReducer)\n    })\n  }\n\n  return store\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport makeStore from './redux/store'\n\nimport './index.css'\nimport 'semantic-ui-css/semantic.min.css'\n\nconst store = makeStore()\n\nconst WithProvider = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n)\n\nReactDOM.render(<WithProvider />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}